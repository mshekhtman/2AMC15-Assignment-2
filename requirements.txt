# Data Intelligence Challenge 2AMC15 - Requirements
# Updated for Assignment 2: Continuous State Space & Deep RL with GPU Support

# Core dependencies (original)
numpy>=1.24.0
tqdm>=4.64.0
pygame>=2.3.0
flask>=2.2.0
flask-socketio>=5.3.0
pillow>=9.4.0
colorcet>=3.0.0

# Deep Learning Framework with GPU Support
# NOTE: For GPU acceleration, install PyTorch with CUDA support using:
# pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121
# OR for CUDA 11.8: pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118
torch>=2.0.0
torchvision>=0.15.0
torchaudio>=2.0.0

# Data Analysis & Visualization
matplotlib>=3.5.0
seaborn>=0.11.0
pandas>=1.5.0

# Machine Learning Utils
scikit-learn>=1.0.0
scipy>=1.9.0  # Required for statistical tests in evaluation framework

# Advanced RL Libraries (optional, base DQN implementation)
gym>=0.26.0
gymnasium>=0.27.0  # Modern replacement for gym
stable-baselines3>=1.7.0

# Development & Testing
pytest>=7.0.0
pytest-cov>=4.0.0

# Code Quality
black>=22.0.0
flake8>=5.0.0

# Documentation
sphinx>=5.0.0

# Jupyter Notebooks (for analysis/experimentation)
jupyter>=1.0.0
ipykernel>=6.0.0

# System Monitoring & GPU Utilities
psutil>=5.9.0  # For system monitoring during training (CPU, RAM, processes)
gpustat>=1.1.1  # Alternative GPU monitoring tool
py3nvml>=0.2.7  # NVIDIA GPU monitoring library for Python

# Training Visualization & Experiment Tracking
tensorboard>=2.10.0  # For training visualization (PyTorch compatible)
wandb>=0.13.0  # For experiment tracking (optional)

# JSON handling for experimental results
jsonschema>=4.0.0  # For validating JSON experimental results

# Additional utilities for GPU testing and monitoring
nvidia-ml-py>=12.535.161  # NVIDIA Management Library for Python
pynvml>=11.4.1  # Alternative NVIDIA ML Python bindings

# Optional: Advanced RL algorithms
# Uncomment if implementing PPO, SAC, etc. with existing libraries
# ray[rllib]>=2.0.0  # For distributed RL
# sb3-contrib>=1.7.0  # Additional SB3 algorithms

# Windows-specific utilities (optional)
wmi>=1.5.1; sys_platform == "win32"  # Windows Management Instrumentation for system info

# Development dependencies for GPU testing
ipython>=8.0.0  # Enhanced Python shell for testing
rich>=13.0.0  # Beautiful terminal output for monitoring scripts